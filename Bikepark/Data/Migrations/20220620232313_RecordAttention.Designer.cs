// <auto-generated />
using System;
using Bikepark.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bikepark.Data.Migrations
{
    [DbContext(typeof(BikeparkContext))]
    [Migration("20220620232313_RecordAttention")]
    partial class RecordAttention
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("Bikepark.Models.Customer", b =>
                {
                    b.Property<int?>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerDocumentNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerDocumentSeries")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerDocumentType")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerEMail")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerFullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerInformation")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerPhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            CustomerDocumentNumber = "00 000001",
                            CustomerEMail = "vasily.pupkin@maily.su",
                            CustomerFullName = "Петр Иванов",
                            CustomerPhoneNumber = "+79781234567"
                        },
                        new
                        {
                            CustomerID = 2,
                            CustomerDocumentNumber = "00 000002",
                            CustomerEMail = "ivan.petrov@maily.su",
                            CustomerFullName = "Иван Петров",
                            CustomerPhoneNumber = "+79780123456"
                        });
                });

            modelBuilder.Entity("Bikepark.Models.Holiday", b =>
                {
                    b.Property<int>("HolidayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("HolidayID");

                    b.ToTable("Holidays");

                    b.HasData(
                        new
                        {
                            HolidayID = 1,
                            Date = new DateTime(2022, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "День России"
                        });
                });

            modelBuilder.Entity("Bikepark.Models.Item", b =>
                {
                    b.Property<int?>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archival")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ItemTypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemID");

                    b.HasIndex("ItemTypeID");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemID = 1,
                            Archival = false,
                            ItemNumber = "101",
                            ItemTypeID = 1
                        },
                        new
                        {
                            ItemID = 2,
                            Archival = false,
                            ItemNumber = "102",
                            ItemTypeID = 1
                        },
                        new
                        {
                            ItemID = 3,
                            Archival = false,
                            ItemNumber = "103",
                            ItemTypeID = 2
                        },
                        new
                        {
                            ItemID = 4,
                            Archival = false,
                            ItemNumber = "104",
                            ItemTypeID = 2
                        },
                        new
                        {
                            ItemID = 5,
                            Archival = false,
                            ItemNumber = "105",
                            ItemTypeID = 3
                        },
                        new
                        {
                            ItemID = 6,
                            Archival = false,
                            ItemNumber = "106",
                            ItemTypeID = 3
                        },
                        new
                        {
                            ItemID = 7,
                            Archival = false,
                            ItemNumber = "107",
                            ItemTypeID = 4
                        },
                        new
                        {
                            ItemID = 8,
                            Archival = false,
                            ItemNumber = "108",
                            ItemTypeID = 4
                        },
                        new
                        {
                            ItemID = 9,
                            Archival = false,
                            ItemNumber = "109",
                            ItemTypeID = 5
                        },
                        new
                        {
                            ItemID = 10,
                            Archival = false,
                            ItemNumber = "110",
                            ItemTypeID = 5
                        },
                        new
                        {
                            ItemID = 11,
                            Archival = false,
                            ItemNumber = "111",
                            ItemTypeID = 5
                        },
                        new
                        {
                            ItemID = 12,
                            Archival = false,
                            ItemNumber = "112",
                            ItemTypeID = 6
                        },
                        new
                        {
                            ItemID = 13,
                            Archival = false,
                            ItemNumber = "113",
                            ItemTypeID = 7
                        },
                        new
                        {
                            ItemID = 14,
                            Archival = false,
                            ItemNumber = "114",
                            ItemTypeID = 8
                        },
                        new
                        {
                            ItemID = 15,
                            Archival = false,
                            ItemNumber = "115",
                            ItemTypeID = 8
                        },
                        new
                        {
                            ItemID = 16,
                            Archival = false,
                            ItemNumber = "116",
                            ItemTypeID = 9
                        },
                        new
                        {
                            ItemID = 17,
                            Archival = false,
                            ItemNumber = "117",
                            ItemTypeID = 9
                        },
                        new
                        {
                            ItemID = 18,
                            Archival = false,
                            ItemNumber = "118",
                            ItemTypeID = 10
                        },
                        new
                        {
                            ItemID = 19,
                            Archival = false,
                            ItemNumber = "201",
                            ItemTypeID = 11
                        },
                        new
                        {
                            ItemID = 20,
                            Archival = false,
                            ItemNumber = "202",
                            ItemTypeID = 12
                        },
                        new
                        {
                            ItemID = 21,
                            Archival = false,
                            ItemNumber = "203",
                            ItemTypeID = 13
                        },
                        new
                        {
                            ItemID = 22,
                            Archival = false,
                            ItemNumber = "204",
                            ItemTypeID = 13
                        },
                        new
                        {
                            ItemID = 23,
                            Archival = false,
                            ItemNumber = "205",
                            ItemTypeID = 14
                        },
                        new
                        {
                            ItemID = 24,
                            Archival = false,
                            ItemNumber = "206",
                            ItemTypeID = 14
                        },
                        new
                        {
                            ItemID = 25,
                            Archival = false,
                            ItemNumber = "301",
                            ItemTypeID = 15
                        },
                        new
                        {
                            ItemID = 26,
                            Archival = false,
                            ItemNumber = "302",
                            ItemTypeID = 16
                        },
                        new
                        {
                            ItemID = 27,
                            Archival = false,
                            ItemNumber = "303",
                            ItemTypeID = 17
                        },
                        new
                        {
                            ItemID = 28,
                            Archival = false,
                            ItemNumber = "304",
                            ItemTypeID = 18
                        },
                        new
                        {
                            ItemID = 29,
                            Archival = false,
                            ItemNumber = "401",
                            ItemTypeID = 19
                        },
                        new
                        {
                            ItemID = 30,
                            Archival = false,
                            ItemNumber = "402",
                            ItemTypeID = 19
                        },
                        new
                        {
                            ItemID = 31,
                            Archival = false,
                            ItemNumber = "403",
                            ItemTypeID = 19
                        },
                        new
                        {
                            ItemID = 32,
                            Archival = false,
                            ItemNumber = "404",
                            ItemTypeID = 19
                        },
                        new
                        {
                            ItemID = 33,
                            Archival = false,
                            ItemNumber = "405",
                            ItemTypeID = 19
                        },
                        new
                        {
                            ItemID = 34,
                            Archival = false,
                            ItemNumber = "1",
                            ItemTypeID = 20
                        },
                        new
                        {
                            ItemID = 35,
                            Archival = false,
                            ItemNumber = "2",
                            ItemTypeID = 21
                        },
                        new
                        {
                            ItemID = 36,
                            Archival = false,
                            ItemNumber = "3",
                            ItemTypeID = 21
                        },
                        new
                        {
                            ItemID = 37,
                            Archival = false,
                            ItemNumber = "4",
                            ItemTypeID = 22
                        },
                        new
                        {
                            ItemID = 38,
                            Archival = false,
                            ItemNumber = "5",
                            ItemTypeID = 23
                        },
                        new
                        {
                            ItemID = 39,
                            Archival = false,
                            ItemNumber = "6",
                            ItemTypeID = 23
                        },
                        new
                        {
                            ItemID = 40,
                            Archival = false,
                            ItemNumber = "7",
                            ItemTypeID = 24
                        },
                        new
                        {
                            ItemID = 41,
                            Archival = false,
                            ItemNumber = "8",
                            ItemTypeID = 25
                        },
                        new
                        {
                            ItemID = 42,
                            Archival = false,
                            ItemNumber = "9",
                            ItemTypeID = 25
                        },
                        new
                        {
                            ItemID = 43,
                            Archival = false,
                            ItemNumber = "10",
                            ItemTypeID = 26
                        },
                        new
                        {
                            ItemID = 44,
                            Archival = false,
                            ItemNumber = "11",
                            ItemTypeID = 27
                        },
                        new
                        {
                            ItemID = 45,
                            Archival = false,
                            ItemNumber = "12",
                            ItemTypeID = 27
                        },
                        new
                        {
                            ItemID = 46,
                            Archival = false,
                            ItemNumber = "13",
                            ItemTypeID = 28
                        },
                        new
                        {
                            ItemID = 47,
                            Archival = false,
                            ItemNumber = "14",
                            ItemTypeID = 29
                        },
                        new
                        {
                            ItemID = 48,
                            Archival = false,
                            ItemNumber = "15",
                            ItemTypeID = 29
                        },
                        new
                        {
                            ItemID = 49,
                            Archival = false,
                            ItemNumber = "16",
                            ItemTypeID = 30
                        },
                        new
                        {
                            ItemID = 50,
                            Archival = false,
                            ItemNumber = "17",
                            ItemTypeID = 31
                        },
                        new
                        {
                            ItemID = 51,
                            Archival = false,
                            ItemNumber = "18",
                            ItemTypeID = 31
                        },
                        new
                        {
                            ItemID = 52,
                            Archival = false,
                            ItemNumber = "19",
                            ItemTypeID = 32
                        },
                        new
                        {
                            ItemID = 53,
                            Archival = false,
                            ItemNumber = "20",
                            ItemTypeID = 33
                        },
                        new
                        {
                            ItemID = 54,
                            Archival = false,
                            ItemNumber = "21",
                            ItemTypeID = 33
                        },
                        new
                        {
                            ItemID = 55,
                            Archival = false,
                            ItemNumber = "22",
                            ItemTypeID = 34
                        },
                        new
                        {
                            ItemID = 56,
                            Archival = false,
                            ItemNumber = "23",
                            ItemTypeID = 35
                        },
                        new
                        {
                            ItemID = 57,
                            Archival = false,
                            ItemNumber = "24",
                            ItemTypeID = 35
                        });
                });

            modelBuilder.Entity("Bikepark.Models.ItemCategory", b =>
                {
                    b.Property<int>("ItemCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Accessories")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ItemCategoryID");

                    b.ToTable("ItemCategories");

                    b.HasData(
                        new
                        {
                            ItemCategoryID = 1,
                            Accessories = false,
                            ItemCategoryName = "MTB"
                        },
                        new
                        {
                            ItemCategoryID = 2,
                            Accessories = false,
                            ItemCategoryName = "MTB подростковый"
                        },
                        new
                        {
                            ItemCategoryID = 3,
                            Accessories = false,
                            ItemCategoryName = "BMX"
                        },
                        new
                        {
                            ItemCategoryID = 4,
                            Accessories = false,
                            ItemCategoryName = "Беговел"
                        },
                        new
                        {
                            ItemCategoryID = 5,
                            Accessories = false,
                            ItemCategoryName = "Электро"
                        },
                        new
                        {
                            ItemCategoryID = 6,
                            Accessories = true,
                            ItemCategoryName = "Аксессуар"
                        });
                });

            modelBuilder.Entity("Bikepark.Models.ItemPrepared", b =>
                {
                    b.Property<int>("ItemPreparedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemPreparedID");

                    b.HasIndex("ItemID");

                    b.ToTable("Prepared");

                    b.HasData(
                        new
                        {
                            ItemPreparedID = 1,
                            ItemID = 10
                        },
                        new
                        {
                            ItemPreparedID = 2,
                            ItemID = 11
                        },
                        new
                        {
                            ItemPreparedID = 3,
                            ItemID = 31
                        },
                        new
                        {
                            ItemPreparedID = 4,
                            ItemID = 32
                        });
                });

            modelBuilder.Entity("Bikepark.Models.ItemRecord", b =>
                {
                    b.Property<int?>("ItemRecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttentionStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomInformation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("End")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ItemID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PricingID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecordID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemRecordID");

                    b.HasIndex("ItemID");

                    b.HasIndex("PricingID");

                    b.HasIndex("RecordID");

                    b.HasIndex("UserID");

                    b.ToTable("ItemRecords");

                    b.HasData(
                        new
                        {
                            ItemRecordID = 1,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 4, 19, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 1,
                            PricingID = 1,
                            RecordID = 1,
                            Start = new DateTime(2022, 4, 19, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            ItemRecordID = 2,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 4, 19, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 2,
                            PricingID = 1,
                            RecordID = 1,
                            Start = new DateTime(2022, 4, 19, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            ItemRecordID = 3,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 4, 19, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 3,
                            PricingID = 1,
                            RecordID = 1,
                            Start = new DateTime(2022, 4, 19, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            ItemRecordID = 4,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 4, 19, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 4,
                            PricingID = 1,
                            RecordID = 1,
                            Start = new DateTime(2022, 4, 19, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            ItemRecordID = 5,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 4, 19, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 34,
                            PricingID = 26,
                            RecordID = 1,
                            Start = new DateTime(2022, 4, 19, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            ItemRecordID = 6,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 5, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 1,
                            PricingID = 1,
                            RecordID = 2,
                            Start = new DateTime(2022, 5, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            ItemRecordID = 7,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 5, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 34,
                            PricingID = 26,
                            RecordID = 2,
                            Start = new DateTime(2022, 5, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            ItemRecordID = 8,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 5, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 2,
                            PricingID = 1,
                            RecordID = 3,
                            Start = new DateTime(2022, 5, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            ItemRecordID = 9,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 5, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 35,
                            PricingID = 26,
                            RecordID = 3,
                            Start = new DateTime(2022, 5, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            ItemRecordID = 10,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 5, 16, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 29,
                            PricingID = 25,
                            RecordID = 4,
                            Start = new DateTime(2022, 5, 16, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            ItemRecordID = 11,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 5, 14, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 29,
                            PricingID = 25,
                            RecordID = 5,
                            Start = new DateTime(2022, 5, 14, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            ItemRecordID = 12,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 5, 14, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 30,
                            PricingID = 25,
                            RecordID = 5,
                            Start = new DateTime(2022, 5, 14, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            ItemRecordID = 13,
                            AttentionStatus = 0,
                            End = new DateTime(2022, 5, 14, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemID = 31,
                            PricingID = 25,
                            RecordID = 5,
                            Start = new DateTime(2022, 5, 14, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        });
                });

            modelBuilder.Entity("Bikepark.Models.ItemType", b =>
                {
                    b.Property<int?>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archival")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemAge")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemCategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemExternalURL")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ItemGender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemImageURL")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ItemSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemTypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemWheelSize")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PricingCategoryID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemTypeID");

                    b.HasIndex("ItemCategoryID");

                    b.HasIndex("PricingCategoryID");

                    b.ToTable("ItemTypes");

                    b.HasData(
                        new
                        {
                            ItemTypeID = 1,
                            Archival = false,
                            ItemCategoryID = 1,
                            ItemColor = "black",
                            ItemDescription = "Горный велосипед",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1490897.html",
                            ItemSize = 3,
                            ItemTypeName = "GT AVALANCHE 27 SPORT",
                            ItemWheelSize = "27''"
                        },
                        new
                        {
                            ItemTypeID = 2,
                            Archival = false,
                            ItemColor = "aqua",
                            ItemDescription = "Горный велосипед",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1490897.html",
                            ItemSize = 3,
                            ItemTypeName = "GT AVALANCHE 27 SPORT",
                            ItemWheelSize = "27''",
                            PricingCategoryID = 1
                        },
                        new
                        {
                            ItemTypeID = 3,
                            Archival = false,
                            ItemCategoryID = 1,
                            ItemColor = "black",
                            ItemDescription = "Горный велосипед",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1490897.html",
                            ItemSize = 2,
                            ItemTypeName = "GT AVALANCHE 27 SPORT",
                            ItemWheelSize = "27''",
                            PricingCategoryID = 1
                        },
                        new
                        {
                            ItemTypeID = 4,
                            Archival = false,
                            ItemCategoryID = 1,
                            ItemColor = "aqua",
                            ItemDescription = "Горный велосипед",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1490897.html",
                            ItemSize = 2,
                            ItemTypeName = "GT AVALANCHE 27 SPORT",
                            ItemWheelSize = "27''",
                            PricingCategoryID = 1
                        },
                        new
                        {
                            ItemTypeID = 5,
                            Archival = false,
                            ItemCategoryID = 1,
                            ItemColor = "black",
                            ItemDescription = "Горный велосипед",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/2541638.html",
                            ItemSize = 4,
                            ItemTypeName = "GT AVALANCHE 29 SPORT",
                            ItemWheelSize = "29''",
                            PricingCategoryID = 1
                        },
                        new
                        {
                            ItemTypeID = 6,
                            Archival = false,
                            ItemCategoryID = 1,
                            ItemColor = "aqua",
                            ItemDescription = "Горный велосипед",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/2541638.html",
                            ItemSize = 4,
                            ItemTypeName = "GT AVALANCHE 29 SPORT",
                            ItemWheelSize = "29''",
                            PricingCategoryID = 1
                        },
                        new
                        {
                            ItemTypeID = 7,
                            Archival = false,
                            ItemCategoryID = 1,
                            ItemColor = "navy",
                            ItemDescription = "Горный велосипед женский",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1496760.html",
                            ItemGender = 2,
                            ItemSize = 1,
                            ItemTypeName = "Mongoose SWITCHBACK SPORT W",
                            ItemWheelSize = "27.5''",
                            PricingCategoryID = 1
                        },
                        new
                        {
                            ItemTypeID = 8,
                            Archival = false,
                            ItemCategoryID = 1,
                            ItemColor = "navy",
                            ItemDescription = "Горный велосипед женский",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1496760.html",
                            ItemGender = 2,
                            ItemSize = 2,
                            ItemTypeName = "Mongoose SWITCHBACK SPORT W",
                            ItemWheelSize = "27.5''",
                            PricingCategoryID = 1
                        },
                        new
                        {
                            ItemTypeID = 9,
                            Archival = false,
                            ItemAge = 1,
                            ItemCategoryID = 2,
                            ItemColor = "red",
                            ItemDescription = "Горный велосипед подростковый",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1493214.html",
                            ItemSize = 2,
                            ItemTypeName = "Mongoose ROCKADILE 20",
                            ItemWheelSize = "20''",
                            PricingCategoryID = 2
                        },
                        new
                        {
                            ItemTypeID = 10,
                            Archival = false,
                            ItemAge = 1,
                            ItemCategoryID = 2,
                            ItemColor = "purple",
                            ItemDescription = "Горный велосипед подростковый",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1496770.html",
                            ItemGender = 2,
                            ItemSize = 2,
                            ItemTypeName = "Mongoose ROCKADILE 20 W",
                            ItemWheelSize = "20''",
                            PricingCategoryID = 2
                        },
                        new
                        {
                            ItemTypeID = 11,
                            Archival = false,
                            ItemCategoryID = 3,
                            ItemColor = "black",
                            ItemDescription = "BMX",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/2033001.html",
                            ItemTypeName = "Radio SAIKO 20",
                            ItemWheelSize = "20''",
                            PricingCategoryID = 3
                        },
                        new
                        {
                            ItemTypeID = 12,
                            Archival = false,
                            ItemCategoryID = 3,
                            ItemColor = "metallic purple",
                            ItemDescription = "BMX",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/2033001.html",
                            ItemTypeName = "Radio SAIKO 20",
                            ItemWheelSize = "20''",
                            PricingCategoryID = 3
                        },
                        new
                        {
                            ItemTypeID = 13,
                            Archival = false,
                            ItemCategoryID = 3,
                            ItemColor = "matt black",
                            ItemDescription = "BMX",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/2033004.html",
                            ItemTypeName = "Radio DARKO",
                            ItemWheelSize = "20''",
                            PricingCategoryID = 3
                        },
                        new
                        {
                            ItemTypeID = 14,
                            Archival = false,
                            ItemCategoryID = 3,
                            ItemColor = "matt black",
                            ItemDescription = "BMX",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/2032941.html",
                            ItemTypeName = "WeThePeople ARCADE",
                            ItemWheelSize = "20''",
                            PricingCategoryID = 3
                        },
                        new
                        {
                            ItemTypeID = 15,
                            Archival = false,
                            ItemAge = 2,
                            ItemCategoryID = 4,
                            ItemColor = "yellow",
                            ItemDescription = "Беговел",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1493326.html",
                            ItemTypeName = "Outleap ROCKET",
                            ItemWheelSize = "12''",
                            PricingCategoryID = 4
                        },
                        new
                        {
                            ItemTypeID = 16,
                            Archival = false,
                            ItemAge = 2,
                            ItemCategoryID = 4,
                            ItemColor = "black",
                            ItemDescription = "Беговел",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1493326.html",
                            ItemTypeName = "Outleap ROCKET",
                            ItemWheelSize = "12''",
                            PricingCategoryID = 4
                        },
                        new
                        {
                            ItemTypeID = 17,
                            Archival = false,
                            ItemAge = 2,
                            ItemCategoryID = 4,
                            ItemColor = "orange",
                            ItemDescription = "Беговел",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1411943.html",
                            ItemTypeName = "Outleap ROCKET",
                            ItemWheelSize = "12''",
                            PricingCategoryID = 4
                        },
                        new
                        {
                            ItemTypeID = 18,
                            Archival = false,
                            ItemAge = 2,
                            ItemCategoryID = 4,
                            ItemColor = "blue",
                            ItemDescription = "Беговел",
                            ItemExternalURL = "https://trial-sport.ru/goods/51516/1411943.html",
                            ItemTypeName = "Outleap ROCKET",
                            ItemWheelSize = "12''",
                            PricingCategoryID = 4
                        },
                        new
                        {
                            ItemTypeID = 19,
                            Archival = false,
                            ItemCategoryID = 5,
                            ItemDescription = "Электровелосипед",
                            ItemExternalURL = "",
                            ItemTypeName = "Himo C26",
                            ItemWheelSize = "26''",
                            PricingCategoryID = 5
                        },
                        new
                        {
                            ItemTypeID = 20,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Шлем",
                            ItemExternalURL = "",
                            ItemSize = 3,
                            ItemTypeName = "Шлем",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 21,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Шлем",
                            ItemExternalURL = "",
                            ItemSize = 2,
                            ItemTypeName = "Шлем",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 22,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Шлем",
                            ItemExternalURL = "",
                            ItemSize = 1,
                            ItemTypeName = "Шлем",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 23,
                            Archival = false,
                            ItemAge = 2,
                            ItemCategoryID = 6,
                            ItemDescription = "Шлем детский",
                            ItemExternalURL = "",
                            ItemTypeName = "Шлем",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 24,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Наколенники",
                            ItemExternalURL = "",
                            ItemSize = 3,
                            ItemTypeName = "Наколенники",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 25,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Наколенники",
                            ItemExternalURL = "",
                            ItemSize = 2,
                            ItemTypeName = "Наколенники",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 26,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Наколенники",
                            ItemExternalURL = "",
                            ItemSize = 1,
                            ItemTypeName = "Наколенники",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 27,
                            Archival = false,
                            ItemAge = 2,
                            ItemCategoryID = 6,
                            ItemDescription = "Наколенники детские",
                            ItemExternalURL = "",
                            ItemTypeName = "Наколенники",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 28,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Налокотники",
                            ItemExternalURL = "",
                            ItemSize = 3,
                            ItemTypeName = "Налокотники",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 29,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Налокотники",
                            ItemExternalURL = "",
                            ItemSize = 2,
                            ItemTypeName = "Налокотники",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 30,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Налокотники",
                            ItemExternalURL = "",
                            ItemSize = 1,
                            ItemTypeName = "Налокотники",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 31,
                            Archival = false,
                            ItemAge = 2,
                            ItemCategoryID = 6,
                            ItemDescription = "Налокотники детские",
                            ItemExternalURL = "",
                            ItemTypeName = "Налокотники",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 32,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Перчатки",
                            ItemExternalURL = "",
                            ItemSize = 3,
                            ItemTypeName = "Перчатки",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 33,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Перчатки",
                            ItemExternalURL = "",
                            ItemSize = 2,
                            ItemTypeName = "Перчатки",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 34,
                            Archival = false,
                            ItemCategoryID = 6,
                            ItemDescription = "Перчатки",
                            ItemExternalURL = "",
                            ItemSize = 1,
                            ItemTypeName = "Перчатки",
                            PricingCategoryID = 6
                        },
                        new
                        {
                            ItemTypeID = 35,
                            Archival = false,
                            ItemAge = 2,
                            ItemCategoryID = 6,
                            ItemDescription = "Перчатки детские",
                            ItemExternalURL = "",
                            ItemTypeName = "Перчатки",
                            PricingCategoryID = 6
                        });
                });

            modelBuilder.Entity("Bikepark.Models.Pricing", b =>
                {
                    b.Property<int?>("PricingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archival")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DaysOfWeek")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReduced")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinDuration")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("PricingCategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PricingName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PricingType")
                        .HasColumnType("INTEGER");

                    b.HasKey("PricingID");

                    b.HasIndex("PricingCategoryID");

                    b.ToTable("Pricings");

                    b.HasData(
                        new
                        {
                            PricingID = 1,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 150.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB будний час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 2,
                            Archival = false,
                            DaysOfWeek = "Friday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 150.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB пятница час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 3,
                            Archival = false,
                            DaysOfWeek = "Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 200.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB выходной час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 4,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = true,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 200.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB праздник час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 5,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = true,
                            MinDuration = 1,
                            Price = 100.0,
                            PricingName = "MTB льготный час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 28,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 2,
                            Price = 125.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB будний 2 часа",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 29,
                            Archival = false,
                            DaysOfWeek = "Friday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 2,
                            Price = 125.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB пятница 2 часа",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 30,
                            Archival = false,
                            DaysOfWeek = "Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 2,
                            Price = 150.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB выходной 2 часа",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 31,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = true,
                            IsReduced = false,
                            MinDuration = 2,
                            Price = 150.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB праздник 2 часа",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 32,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = true,
                            MinDuration = 2,
                            Price = 75.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB льготный 2 часа",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 6,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 800.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB будний день",
                            PricingType = 0
                        },
                        new
                        {
                            PricingID = 7,
                            Archival = false,
                            DaysOfWeek = "Friday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 1000.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB пятница день",
                            PricingType = 0
                        },
                        new
                        {
                            PricingID = 8,
                            Archival = false,
                            DaysOfWeek = "Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 1000.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB выходной день",
                            PricingType = 0
                        },
                        new
                        {
                            PricingID = 9,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = true,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 1000.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB праздник день",
                            PricingType = 0
                        },
                        new
                        {
                            PricingID = 10,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = true,
                            MinDuration = 1,
                            Price = 400.0,
                            PricingCategoryID = 1,
                            PricingName = "MTB льготный день",
                            PricingType = 0
                        },
                        new
                        {
                            PricingID = 11,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 100.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток будний час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 12,
                            Archival = false,
                            DaysOfWeek = "Friday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 100.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток пятница час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 13,
                            Archival = false,
                            DaysOfWeek = "Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 150.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток выходной час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 14,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = true,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 150.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток праздник час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 15,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = true,
                            MinDuration = 1,
                            Price = 50.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток льготный час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 16,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 500.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток будний день",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 17,
                            Archival = false,
                            DaysOfWeek = "Friday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 600.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток пятница день",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 18,
                            Archival = false,
                            DaysOfWeek = "Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 700.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток выходной день",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 19,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = true,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 700.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток праздник день",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 20,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = true,
                            MinDuration = 1,
                            Price = 300.0,
                            PricingCategoryID = 2,
                            PricingName = "MTB подросток льготный день",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 21,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 100.0,
                            PricingCategoryID = 3,
                            PricingName = "BMX будний час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 22,
                            Archival = false,
                            DaysOfWeek = "Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 150.0,
                            PricingCategoryID = 3,
                            PricingName = "BMX пт-сб-вс час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 23,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = true,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 150.0,
                            PricingCategoryID = 3,
                            PricingName = "BMX праздник час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 24,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 100.0,
                            PricingCategoryID = 4,
                            PricingName = "Беговел час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 25,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 300.0,
                            PricingCategoryID = 5,
                            PricingName = "Электро час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 26,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 50.0,
                            PricingCategoryID = 6,
                            PricingName = "Аксессуар час",
                            PricingType = 1
                        },
                        new
                        {
                            PricingID = 27,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 300.0,
                            PricingCategoryID = 6,
                            PricingName = "Аксессуар день",
                            PricingType = 0
                        },
                        new
                        {
                            PricingID = 33,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 2000.0,
                            PricingName = "Ремонт колеса",
                            PricingType = 2
                        },
                        new
                        {
                            PricingID = 34,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 2000.0,
                            PricingName = "Ремонт цепи",
                            PricingType = 2
                        },
                        new
                        {
                            PricingID = 35,
                            Archival = false,
                            DaysOfWeek = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday",
                            IsHoliday = false,
                            IsReduced = false,
                            MinDuration = 1,
                            Price = 1000.0,
                            PricingName = "Ремонт тормоза",
                            PricingType = 2
                        });
                });

            modelBuilder.Entity("Bikepark.Models.PricingCategory", b =>
                {
                    b.Property<int>("PricingCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PricingCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PricingCategoryID");

                    b.ToTable("PricingCategories");

                    b.HasData(
                        new
                        {
                            PricingCategoryID = 1,
                            PricingCategoryName = "Горный"
                        },
                        new
                        {
                            PricingCategoryID = 2,
                            PricingCategoryName = "Подросток"
                        },
                        new
                        {
                            PricingCategoryID = 3,
                            PricingCategoryName = "BMX"
                        },
                        new
                        {
                            PricingCategoryID = 4,
                            PricingCategoryName = "Детский"
                        },
                        new
                        {
                            PricingCategoryID = 5,
                            PricingCategoryName = "Электро"
                        },
                        new
                        {
                            PricingCategoryID = 6,
                            PricingCategoryName = "Аксессуар"
                        });
                });

            modelBuilder.Entity("Bikepark.Models.Record", b =>
                {
                    b.Property<int?>("RecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttentionStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomInformation")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("End")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Price")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("RecordID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("UserID");

                    b.ToTable("Records");

                    b.HasData(
                        new
                        {
                            RecordID = 1,
                            AttentionStatus = 0,
                            CustomerID = 1,
                            End = new DateTime(2022, 4, 19, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1200.0,
                            Start = new DateTime(2022, 4, 19, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            RecordID = 2,
                            AttentionStatus = 0,
                            CustomerID = 2,
                            End = new DateTime(2022, 5, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 750.0,
                            Start = new DateTime(2022, 5, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RecordID = 3,
                            AttentionStatus = 0,
                            CustomerID = 1,
                            End = new DateTime(2022, 5, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 750.0,
                            Start = new DateTime(2022, 5, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RecordID = 4,
                            AttentionStatus = 0,
                            CustomerID = 1,
                            End = new DateTime(2022, 5, 16, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1200.0,
                            Start = new DateTime(2022, 5, 16, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RecordID = 5,
                            AttentionStatus = 0,
                            CustomerID = 2,
                            End = new DateTime(2022, 5, 14, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 3000.0,
                            Start = new DateTime(2022, 5, 14, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Bikepark.Models.Item", b =>
                {
                    b.HasOne("Bikepark.Models.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeID");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("Bikepark.Models.ItemPrepared", b =>
                {
                    b.HasOne("Bikepark.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Bikepark.Models.ItemRecord", b =>
                {
                    b.HasOne("Bikepark.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID");

                    b.HasOne("Bikepark.Models.Pricing", "Pricing")
                        .WithMany()
                        .HasForeignKey("PricingID");

                    b.HasOne("Bikepark.Models.Record", "Record")
                        .WithMany("ItemRecords")
                        .HasForeignKey("RecordID");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Item");

                    b.Navigation("Pricing");

                    b.Navigation("Record");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bikepark.Models.ItemType", b =>
                {
                    b.HasOne("Bikepark.Models.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryID");

                    b.HasOne("Bikepark.Models.PricingCategory", "PricingCategory")
                        .WithMany()
                        .HasForeignKey("PricingCategoryID");

                    b.Navigation("ItemCategory");

                    b.Navigation("PricingCategory");
                });

            modelBuilder.Entity("Bikepark.Models.Pricing", b =>
                {
                    b.HasOne("Bikepark.Models.PricingCategory", "PricingCategory")
                        .WithMany()
                        .HasForeignKey("PricingCategoryID");

                    b.Navigation("PricingCategory");
                });

            modelBuilder.Entity("Bikepark.Models.Record", b =>
                {
                    b.HasOne("Bikepark.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bikepark.Models.Record", b =>
                {
                    b.Navigation("ItemRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
