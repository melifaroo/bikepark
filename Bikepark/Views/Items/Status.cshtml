@model IEnumerable<Bikepark.Models.Item>

@using Bikepark.Models
@using Microsoft.EntityFrameworkCore
@using Bikepark.Views.Helpers
@{
    Layout = "_MainLayout";
    ViewData["Title"] = "Велопарк";
    ViewData["menu"] = "storage";    
    DbSet<ItemRecord> ItemRecs = ViewBag.ItemRecs;
}

<h1>Велопарк</h1>

@if ( User.Identity.IsAuthenticated ){
    if ( User.IsInRole(BikeparkConfig.ManagersRole) ){  
        <p>
            <a asp-action="Create">Добавить велосипед или амуницию</a>
        </p>
    }
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ItemType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemNumber)
            </th>
            <th>
                Статус
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        
            int service = await ItemRecs.Where(itemrec => itemrec.ItemID == item.ItemID).CountAsync(itemrec => itemrec.Status == Bikepark.Models.Status.Service);
            int active = await ItemRecs.Where(itemrec => itemrec.ItemID == item.ItemID).CountAsync(itemrec => itemrec.Status == Bikepark.Models.Status.Active);
            int onservice = await ItemRecs.Where(itemrec => itemrec.ItemID == item.ItemID).CountAsync(itemrec => itemrec.Status == Bikepark.Models.Status.OnService);
            int schedule = await ItemRecs.Where(itemrec => itemrec.ItemID == item.ItemID).CountAsync(itemrec => itemrec.Status == Bikepark.Models.Status.Scheduled);
            int serviceschedule = await ItemRecs.Where(itemrec => itemrec.ItemID == item.ItemID).CountAsync(itemrec => itemrec.Status == Bikepark.Models.Status.ServiceScheduled);
        
        var Status = ((active>0)?"Выдан ":"") + 
                        ((active>1)?"Ошибка, кол-во одновременных выдач " + active:"") + 
                        ((onservice>0)?"В ремонте ":"") + 
                        ((active>0 && onservice>0)?"Ошибка, выдан, но в ремонте " + active:"") +
                        ((schedule>0)?"Есть брони (" + schedule + ") ":"") +
                        ((service>0)?"Требуется ремонт":"") ;

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ItemType.ItemTypeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemNumber)
            </td>
            <td>
                @Status
            </td>
            <td>
                <a asp-controller="Rental" asp-action="ItemDetails" asp-route-id="@item.ItemID">Подробнее</a>
                
                @if ( User.Identity.IsAuthenticated ){
                    if ( User.IsInRole(BikeparkConfig.ManagersRole) ){  
                        <span>|</span>
                        <a asp-action="Edit" asp-route-id="@item.ItemID">Изменить</a>
                        <span>|</span>
                        <a asp-action="Delete" asp-route-id="@item.ItemID">Удалить</a>
                    }
                }
            </td>
        </tr>
}
    </tbody>
</table>