@model IEnumerable<Bikepark.Models.ItemRecord>

@{
    ViewData["Title"] = "Index";
    Layout = "_MainLayout";
}

<h1>Index</h1>

@{
    Layout = "_MainLayout";
    ViewData["Title"] = ViewBag.Title;

    var Number = ViewBag.Number;
    var Error = ViewBag.Error;
    
    var IsService = ViewBag.IsService;
    var Actual = ViewBag.Actual;
    var From    = ViewBag.From;
    var To      = ViewBag.To;
}

<h1>@ViewBag.Title</h1>

<div class="d-flex flex-wrap justify-content-between align-items-center border-bottom">
    <ul class="nav col-md-6 justify-content-start">  
        @if(IsService) {
            <li class="nav-item">
                <a class="nav-link" asp-action="NumberOnService">Назначить ремонт</a>
            </li>  
        } else  
        {
            <li class="nav-item">
                <a class="nav-link" asp-action="Rental" asp-action="Actual">Журнал заказов</a>
            </li>    
        }   
    </ul>
    <ul class="nav  col-md-6 justify-content-end"> 
        <li class="nav-item">
            <a class="nav-link" asp-action="Export" style="display: none">Загрузить таблицу XLS</a>
        </li>    
        @if(IsService) 
        {
            <li class="nav-item">
                <a class="nav-link" asp-action="Service">Все записи</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link" asp-action="Rental">Все записи</a>
            </li>            
        }
    </ul>  
</div>

<partial name="_LogItemRecords"  /> 

@section Scripts {          
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/items.js"></script> 
    <link href="~/css/rent-main.css" rel="stylesheet" asp-append-version="true" /> 
    <script>
        var error = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Error));  
    </script>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Record)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pricing)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.End)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomInformation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Record.RecordID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Item.ItemNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pricing.PricingID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Start)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.End)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomInformation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.Id)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ItemRecordID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ItemRecordID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ItemRecordID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
