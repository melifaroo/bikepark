@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model Bikepark.Models.ItemRecord
@using Bikepark.Models
@using Microsoft.EntityFrameworkCore;
@using HtmlHelpers.BeginCollectionItemCore
@{
    var item_start_style = ((Model.Record != null)
                    && (Model.Record.Status == Status.Active || Model.Record.Status == Status.Closed)
                    && (Model.Start != null && !Model.Start.Equals(Model.Record.Start))) ? "" : "display: none";
    var item_end_style = ((Model.Record != null)
                    && (Model.Record.Status == Status.Active || Model.Record.Status == Status.Closed)
                    && (Model.End != null && !Model.End.Equals(Model.Record.End))) ? "" : "display: none";
    //DbSet<Pricing> prices = ViewBag.Prices;
    //IEnumerable<DateOnly> holidays = ViewBag.Holidays;
    //IEnumerable<Pricing> actualprices = new List<Pricing>();
    int? PricingCategoryID = Model.Item.ItemType.PricingCategoryID;
    //var isHoliday = holidays.Any(day => day.CompareTo(DateTime.Now) == 0);
    ViewData["PricingID"] = Model.PricingID;
    //if (Model.Record != null && Model.Status<Status.Active)
    //    actualprices = await PricingFilter.ActualPricing(prices, Model.Item.ItemType.PricingCategoryID, (Model.Start ?? Model.Record.Start ?? DateTime.Now), (Model.End ?? Model.Record.End ?? DateTime.Now) , isHoliday);
}   
<tr class="item-record" data-itemid="@Model.ItemID" data-id="@Model.GetHashCode()" status="@Model.Status">  
    <input type="hidden" name="ItemRecords.index" autocomplete="off" value="@Model.GetHashCode()" />
        <td class="td-buttons"  style="width : 150px;">
            <div class="d-flex flex-row">
                @{
                    if (Model.Status == Status.Active)
                    {
                        <input type="radio"   id="chk-givenout-@Model.GetHashCode()" class="btn-check chk-givenout chk-item-action" name="status-action-@Model.GetHashCode()" value = "@Status.Active" checked data-irecid="@Model.GetHashCode()">
                        <label               for="chk-givenout-@Model.GetHashCode()" class="btn btn-sm label-giveout btn-outline-success" title="В прокате"><i class="bi bi-bicycle"></i></label>
                        <input type="radio"   id="chk-getback-@Model.GetHashCode()" class="btn-check chk-getback chk-item-action" name="status-action-@Model.GetHashCode()" value = "@Status.Closed" unchecked data-irecid="@Model.GetHashCode()">
                        <label               for="chk-getback-@Model.GetHashCode()" class="btn btn-sm btn-outline-primary" ><i class="bi bi-hand-thumbs-up" title="Принять"></i></label>
                        <input type="radio"   id="chk-service-@Model.GetHashCode()" class="btn-check chk-service chk-item-action" name="status-action-@Model.GetHashCode()" value = "@Status.Service" unchecked data-irecid="@Model.GetHashCode()">
                        <label               for="chk-service-@Model.GetHashCode()" class="btn btn-sm btn-outline-danger" ><i class="bi bi-wrench-adjustable" title="Оформить ремонт"></i></label>
                    }else
                    if (Model.Status < Status.Active){
                        if (Model.Status == Status.Scheduled)
                        {
                            <button type="button" class="btn btn-sm btn-warning" ><i class='bi bi-calendar-check'></i></button>
                        }
                        <button type="button" class="btn btn-sm btn-outline-danger btn-item-delete" data-itemid="@Model.ItemID"><i class="bi bi-x"></i></button>
                    }
                    else if (Model.Status == Status.Closed)
                    {
                        <label class="btn btn-sm btn-secondary" style=" width: 150px;"><i class="bi bi-stopwatch"></i>@Html.DisplayFor(m => Model.Status)</label>
                    }else if (Model.Status > Status.Closed && Model.Status < Status.Fixed )
                    {
                        <label class="btn btn-sm btn-danger" style=" width: 150px;"><i class="bi bi-wrench-adjustable-circle"></i>@Html.DisplayFor(m => Model.Status)</label>
                    } if (Model.Status == Status.Fixed )
                    {
                        <label class="btn btn-sm btn-secondary" style=" width: 150px;"><i class="bi bi-wrench-adjustable-circle"></i>@Html.DisplayFor(m => Model.Status)</label>
                    }
                }
               
                <input name="ItemRecords[@Model.GetHashCode()].ItemRecordID"    value="@Model.ItemRecordID" class="itemrecordid" type="hidden"/> 
                <input name="ItemRecords[@Model.GetHashCode()].RecordID"        value="@Model.RecordID"     class="recordid" type="hidden"/> 
                <input name="ItemRecords[@Model.GetHashCode()].ItemID"          value="@Model.ItemID"       class="itemid" type="hidden"/> 
                <input name="ItemRecords[@Model.GetHashCode()].Status"          value="@Model.Status"       class="status" type="hidden"/>    
                <input value="@PricingCategoryID"  class="pricingcategoryid" type="hidden"/>    
                <div class="col-sm" style="display: none;">
                    <p class="half-row my-0">rec# @Html.DisplayFor(m => Model.RecordID)</p>
                    <p class="half-row my-0">reci# @Html.DisplayFor(m => Model.ItemRecordID)</p>
                </div>
                <div class="col-sm" style="display: none;">
                    <p class="half-row my-0">item  @Html.DisplayFor(m => Model.ItemID)</p>
                    <p class="half-row my-0">price @Html.DisplayFor(m => Model.PricingID)</p>
                </div>       

            </div>
        </td>      
        <td  style="width : 10%; font-weight: bold">
            <a target="_blank" rel="noopener noreferrer" href="/Rental/ItemDetails?id=@Model.ItemID">
                @Html.DisplayFor(m => Model.Item.ItemNumber)
            </a>
        </td>   
        <td  >
            @Html.DisplayFor(m => Model.Item.ItemType.ItemTypeName)
        </td>
        <td  >
                <input name="ItemRecords[@Model.GetHashCode()].PricingID0"  value="@Model.PricingID" class="pricing0" type="hidden"/>  
                @if (Model.Status < Status.Active)
                {
                    <select name="ItemRecords[@Model.GetHashCode()].PricingID" value="@Model.PricingID" class="form-control form-control-sm pricing" title="price">
                        @*<partial name="_ItemRecordPricingOptions" model="@actualprices"/>  *@
                    </select>
                }else{
                    <input name="ItemRecords[@Model.GetHashCode()].PricingID"  value="@Model.PricingID" class="pricing" type="hidden"/>  
                    @Html.DisplayFor(m => Model.Pricing.PricingName)
                }
        </td>
        <td > 
            <span class="pricing-info">
                
                    @Html.DisplayFor(m => Model.Pricing.Price)
                    <span>-</span>
                    @Html.DisplayFor(m => Model.Pricing.PricingType)  
                
             </span>
        </td>
        <td style="width : 10%; vertical-align: top">
            <div class="col-sm" style="display: none;">
                <p class="half-row my-0" style="@item_start_style ">Выдан:@Html.DisplayFor(m => Model.Start)</p>
                <p class="half-row my-0" style="@item_end_style">Сдан:@Html.DisplayFor(m => Model.End)</p>
                <p class="half-row my-0" >Статус @Html.DisplayFor(m => Model.Status)</p>
            </div>       
            <label >с @Model.Start?.ToString("HH:mm")</label>
            <input name="ItemRecords[@Model.GetHashCode()].Start" value="@Model.Start?.ToString("yyyy-MM-ddTHH:mm")"  class="start" type="hidden"/> 
        </td>     
        <td style="width : 10%; vertical-align: top">    
            <label >по @Model.End?.ToString("HH:mm")</label>
            <input name="ItemRecords[@Model.GetHashCode()].End"   value="@Model.End?.ToString("yyyy-MM-ddTHH:mm")"     class="end"  type="hidden"/>
        </td>      
</tr>   
