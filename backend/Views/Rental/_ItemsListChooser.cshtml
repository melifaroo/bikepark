@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Bikepark.Models.RentalRecord

@using Microsoft.EntityFrameworkCore
@using Bikepark.Views.Helpers
@{
    DbSet<Item> Items = ViewBag.Items;
    DbSet<ItemType> Types = ViewBag.Types;
    DbSet<RentalRecord> Rents = ViewBag.Rents;
    DbSet<RentalItem> RentedItems = ViewBag.RentedItems;
    ItemType someItemType = new ItemType();
}

<div class="table-responsive-sm tablealign">
    <table class="table">
        <thead class="thead">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => someItemType.ItemTypeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => someItemType.ItemCategory)
                </th>
                <th>
                    @Html.DisplayNameFor(model => someItemType.ItemAge)
                </th>
                <th>
                    @Html.DisplayNameFor(model => someItemType.ItemGender)
                </th>
                <th>
                    @Html.DisplayNameFor(model => someItemType.ItemSize)
                </th>
                <th>
                    @Html.DisplayNameFor(model => someItemType.ItemWheelSize)
                </th>
                <th>
                    @Html.DisplayNameFor(model => someItemType.ItemColor)
                </th>
                <th>
                    Номера
                </th>
            </tr>
        </thead>
        <tbody>
                @foreach (var type in Types) {
                    <tr>
                        <td>
                            @Html.DisplayFor(m => type.ItemTypeName)
                        </td>
                        <td>
                            @Html.DisplayFor(m => type.ItemCategory.ItemCategoryName)
                        </td>
                        <td>
                            @Html.DisplayFor(m => type.ItemAge)
                        </td>
                        <td>
                            @Html.DisplayFor(m => type.ItemGender)
                        </td>
                        <td>
                            @Html.DisplayFor(m => type.ItemSize)
                        </td>
                        <td>
                            @Html.DisplayFor(m => type.ItemWheelSize)
                        </td>
                        <td>
                            @Html.DisplayFor(m => type.ItemColor)
                        </td> 
                        <td>
                            <div class="d-flex flex-row">
                                @foreach (var item in Items.Where(i => i.ItemTypeID==type.ItemTypeID).ToList() ){
                                    bool overlap = false;
                                    await RentedItems.Where(renteditem => renteditem.ItemID == item.ItemID).ForEachAsync(renteditem => {
                                        overlap = overlap || RentalRecord.Overlap(Model, renteditem.RentalRecord);
                                        if (overlap)
                                            return;
                                    });
                        
                                    <input type="checkbox" id="chk-item-add-@item.ItemID" class="btn-check" data-itemid="@item.ItemID" disabled="@overlap"/>                                
                                    <label                for="chk-item-add-@item.ItemID" class="btn btn-outline-success"> @item.ItemNumber  </label>  
                                }
                            </div>
                        </td>
                    </tr>

                }
        </tbody>
    </table>
</div>

<style>
    .tablealign .table {
        border-collapse: collapse;
        width: 95%;
    }
    .tablealign  .table td {
            overflow: hidden;
            word-break: normal;
            text-align: center;
        }
    .tablealign  .table th  {
            text-align: center;
            word-break: normal;
            min-width: 100px;
        }
    .tablealign {
        float: right;
        width: 100%;
        height: 100%;
        border-radius: 3px;
        padding-bottom: 50px;
    }
   .tablealign  tbody {
         overflow-y: auto;
        overflow-x: hidden;
        height: 336px;
        display: block;
    }
   .tablealign  tbody::-webkit-scrollbar {
    }
   .tablealign  thead {
        display: table;
        width: calc(100%-17px);
        table-layout: auto;
    }

  .tablealign  tbody tr {
        table-layout: fixed;
        display: table;
        width: 100%;
    }

    .tablealign tr[disabled] td {
      filter: blur(1px);
      pointer-events: none;
    }

</style>